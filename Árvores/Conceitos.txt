~Árvores: abstratas não lineares
	• 1 nó  pai/raiz e 0 ou "n" nós filhos
	• raiz "conhece" os filhos => tem os endereços dos seus filhos
	• os filhos "não conhecem" o pai => não tem o endereço do pai
		->O mecanismo de conexão entre filho-pai se dá pelo retorno do empilhamento.

Possui as operações:
1) Percorrer
2) Inserção é nas folhas (nó que possui "null" nos filhos)
3) Pesquisa
4) Deleção 

Vantagens:
1) Se ordenada, otimiza o processo de pesquisa

Desvantagens:
1) Uso de recursão  

Pesquisa e Busca -> Dependem da ordenação
Recuperação -> WEB/DB = busca com relevância


*Amplitude - ou largura
*Profundidade

Conceitos:
	nó/nodo
	raiz
	filhos
	níveis (a profundidade da árvore)
	altura
	folhas: nós sem filhos
	sub-árvore: cada nó é uma sub-árvore
	sub-raiz: é o nó pai/raiz de uma sub-árvore (se não possuir filhos, é uma folha e não uma sub-raiz)

A computação prefere árvores binárias de pesquisa/busca
	árvores ordenadas

Regra padrão: menores à esquerda do raiz
			  maiores à direia do raiz

Números iguais é questão de if

Percurso em amplitude
Percurso em profundidade
	
3 tipos de percurso em profundidade:
	- visita raiz; vai p/esquerda; vai p/direita; -> RED ou Pré-fixado
	- vai p/ esquerda, visita raiz, vai p/direita; -> ERD ou Infixado
	- vai p/ esquerda, vai p/ direita, visita raiz -> EDR ou pós-fixado

